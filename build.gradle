plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.6'
	id 'io.spring.dependency-management' version '1.1.0'

	// asciidoc
	id 'org.asciidoctor.jvm.convert' version "3.3.2"
}


group = 'com.hellparty'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '17'
}

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
	asciidoctorExt //asciidoc 설정 종속성 추가
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-oauth2-client'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'

	// querydsl 추가
	implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
	annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
	annotationProcessor "jakarta.annotation:jakarta.annotation-api"
	annotationProcessor "jakarta.persistence:jakarta.persistence-api"

	// JWT
	implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-impl:0.11.5'
	implementation 'io.jsonwebtoken:jjwt-jackson:0.11.5'

	// Redis
	implementation 'org.springframework.boot:spring-boot-starter-data-redis'

	// WebSocket
	implementation 'org.springframework.boot:spring-boot-starter-websocket'

	// Quartz
	implementation 'org.springframework.boot:spring-boot-starter-quartz'

	// Thymeleaf
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'

	// Validation
	implementation 'org.springframework.boot:spring-boot-starter-validation'

	// Asciidoctor (.adoc)
	asciidoctorExt 'org.springframework.restdocs:spring-restdocs-asciidoctor'

	// Restdocs
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'

	// Jasypt
	implementation 'com.github.ulisesbocchio:jasypt-spring-boot-starter:3.0.3'

	// Imgscalr (make thumbnail image)
	implementation 'org.imgscalr:imgscalr-lib:4.2'

	runtimeOnly 'com.h2database:h2'
}

tasks.named('test') {
	useJUnitPlatform()
}

def querydslDir = "$buildDir/generated/querydsl"

sourceSets {
	main.java.srcDirs += [ querydslDir ]
}

tasks.withType(JavaCompile) {
	options.annotationProcessorGeneratedSourcesDirectory = file(querydslDir)
}

clean.doLast {
	file(querydslDir).deleteDir()
}

ext {
	snippetsDir = file('build/generated-snippets')
}
test{
	outputs.dir snippetsDir
}
asciidoctor{
	inputs.dir snippetsDir
	configurations 'asciidoctorExt'
	dependsOn test
}
bootJar{
	dependsOn asciidoctor // jar 빌드 되기 전 asciidoctor task 실행
	from ("${asciidoctor.outputDir}/html5"){ // 생성된 문서를 jar/static/docs 디렉토리에 복사
		into 'static/docs'
	}
}
